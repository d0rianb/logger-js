const fs=require("fs"),path=require("path"),os=require("os"),process=require("process"),moment=require("moment-timezone"),speedDate=require("speed-date"),pkgDir=require("pkg-dir"),VERSION=require("../package.json").version,MAX_FILE_LIMIT=15,blockingErrors=!0;let levels={0:"INFO",1:"DEBUG",2:"WARNING",3:"ERROR",4:"FATAL"},trustedFiles=[],options={filename:"logs.log",folder:path.resolve(pkgDir.sync(),"./logs/"),displayLevel:0,extension:".log",useMoment:!1,timezone:"Europe/Berlin",console_logs:!1,showPID:!1,showHostname:!1,align:"left"};function handleWriteError(e){if(e)throw new LoggerWriteError(`Write error - ${e}`)}class Logger{static setOptions(e){options=Object.assign(options,e)}static get options(){return options}static alignLevel(e,t){const r=Object.values(levels).sort(((e,t)=>t.length-e.length))[0].length-e.length;return"center"===t?`${" ".repeat(Math.floor(r/2))}${e}${" ".repeat(Math.ceil(r/2))}`:t&&"left"!==t?"right"===t?`${" ".repeat(r)}${e}`:void 0:`${e}${" ".repeat(r)}`}static log(e,t,r){const o=path.resolve(options.folder,e),s=Logger.getDate();let n="UNKNOWN_LEVEL";"string"==typeof t?n=t:"number"==typeof t&&(n=levels[t]);const i=`[${s}] - ${Logger.alignLevel(n,options.align)}${options.showPID?" - PID "+process.pid:""} - ${r}${options.showHostname?" @ "+os.hostname:""}\n`,a="number"==typeof options.displayLevel?options.displayLevel:Number(Object.keys(levels).find((e=>levels[e].includes(options.displayLevel.toUpperCase())))),l="number"==typeof t?t:Number(Object.keys(levels).find((e=>levels[e].includes(t.toUpperCase()))));if(!Number.isNaN(a)&&!Number.isNaN(l)&&a>l)return Logger;if(options.console_logs)return console.log(i.replace("\n","")),Logger;if(!trustedFiles.includes(o)){const e=path.dirname(o);if(fs.existsSync(e)||fs.mkdirSync(e,{recursive:!0}),fs.existsSync(o)||fs.writeFileSync(o,"",handleWriteError),path.extname(o)!==`${options.extension}`)throw`Logger error : file: "${o}" extension is not ${options.extension}`;trustedFiles.push(o)}return this.streams||(this.streams={}),o in this.streams||(Object.keys(this.streams).length>15&&(this.streams={}),this.streams[o]=fs.createWriteStream(o,{flags:"a",encoding:"utf8",mode:438}),this.streams[o].on("error",handleWriteError)),this.streams[o].write(i),Logger.onLog({filename:e,level:t,message:i}),Logger}static info(e,t=options.filename){return Logger.onInfo(e),this.log(t,0,e)}static debug(e,t=options.filename){return this.log(t,1,e)}static warn(e,t=options.filename){return Logger.onWarn(e),this.log(t,2,e)}static error(e,t=options.filename,r={}){return"noEvent"in r&&r.noEvent||Logger.onError(e),this.log(t,3,e)}static fatal(e,t=options.filename){return Logger.onFatal(e),this.log(t,4,e)}static clear(...e){return e.length||Logger.clearFile(options.filename),"all"==e[0]?Logger.getAllFiles().forEach((e=>Logger.clearFile(e))):e.forEach((e=>Logger.clearFile(e))),Logger}static clearFile(e){const t=path.resolve(options.folder,e);fs.existsSync(t)&&fs.truncate(t,0,(e=>handleWriteError(e)))}static getDate(){const e="DD-MM-YYYY HH:mm:ss";if(options.useMoment)return moment().tz(options.timezone).format(e);{const t=new Date(Date.now());return speedDate.cached(e,t)}}static getAllFiles(e){const t=e||options.folder,r=fs.readdirSync(path.resolve(t));return Array.from(r).filter((e=>path.extname(e)===`${options.extension}`))}static getFileContent(e){const t=path.resolve(options.folder,e);return fs.existsSync(t)?fs.readFileSync(t,"utf-8"):""}static get version(){return VERSION}static get levels(){return levels}static getLevel(e){return Object.entries(levels).find((([t,r])=>"string"==typeof e?r.includes(e.toUpperCase()):"number"==typeof e?t==e:void 0))}static addLevel(e){const t=parseInt(Object.keys(levels)[Object.keys(levels).length-1])+1;return levels[t]=e.toUpperCase(),Logger.getLevel(t)}static onLog(e){}static onInfo(e){}static onWarn(e){}static onError(e){}static onFatal(e){}static onLoggerError(e){}static on(e,t){if("function"!=typeof t)throw new LoggerError("Invalid callback");switch(e){case"log":this.onLog=t;break;case"info":this.onInfo=t;break;case"warn":this.onWarn=t;break;case"error":this.onError=t;break;case"fatal":this.onFatal=t;break;case"loggerError":this.onLoggerError=t}}}class LoggerError extends Error{constructor(e,...t){super(e),Logger.error(e,"logger.log"),Logger.onLoggerError(e)}}class LoggerWriteError extends LoggerError{constructor(e,...t){super(e,...t)}}module.exports=Logger;
